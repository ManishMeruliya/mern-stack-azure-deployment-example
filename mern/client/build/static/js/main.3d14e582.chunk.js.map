{"version":3,"sources":["components/navbar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","_jsx","children","_jsxs","className","NavLink","to","style","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Record","props","record","name","position","level","Link","concat","_id","onClick","deleteRecord","RecordList","records","setRecords","useState","useEffect","async","response","fetch","ok","message","statusText","window","alert","json","getRecords","length","marginTop","map","method","newRecords","filter","el","Edit","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","prev","toString","fetchData","onSubmit","e","preventDefault","editedPerson","body","JSON","stringify","headers","htmlFor","onChange","target","checked","Create","newPerson","catch","error","App","margin","Routes","Route","exact","path","element","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.3d14e582.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n        <img style={{\"width\" : 25 + '%'}} src=\"https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/4B45D0EC-3482-4759-82DA37D8EA07D229/webimage-8A27671A-8A53-45DC-89D7BF8537F15A0D.png\" alt=\"MongoDB logo of green leaf and word MongoDB\"></img>\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.position}</td>\n    <td>{props.record.level}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n      <button className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`/record/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return; \n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`/${id}`, {\n      method: \"DELETE\"\n    });\n\n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n        </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", position: \"\", level: \"\" });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ margin: 20 }}>\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}